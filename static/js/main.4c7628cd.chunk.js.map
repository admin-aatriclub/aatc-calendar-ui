{"version":3,"sources":["containers/NotFound.js","components/event-data-loader/EventDataLoader.js","components/apiConfig.js","components/ContactProvider.js","components/Utils.js","components/ApiProvider.js","components/event-calendar/EventCalendar.js","components/RegistrationsProvider.js","components/EmailProvider.js","components/EventProvider.js","components/event-display/EventDisplay.js","components/date-time-range/DateTimeRange.js","components/event-create/EventCreator.js","components/event-edit/EventEditor.js","Routes.js","App.js","reportWebVitals.js","index.js"],"names":["NotFound","className","EventDataLoader","this","props","name","type","color","height","width","Component","apiConfig","eventsUrl","process","contactsUrl","registrationsUrl","emailUrl","getContact","contactId","a","axios","method","baseURL","headers","resp","data","buildRedirect","path","member","eventInfo","to","pathname","state","push","searchForSessionAndAdjustFields","sessionData","sessionId","e","Object","assign","sess","Sessions","filter","x","Id","Number","Name","Title","StartDate","EndDate","callApi","baseUrl","endpoint","params","body","EventCalendar","handleEventClick","arg","id","event","backgroundColor","setState","showEvent","eventId","parentId","extendedProps","alert","handleDateClick","createEvent","isLoggedInUser","date","Date","now","firstDateEventsToRetrieve","firstDate","setFullYear","getFullYear","setMonth","getMonth","toISOString","handleEvents","events","currentEvents","getEvents","undefined","myEvents","evnt","shouldShowEvent","map","convertEventType","onEventChange","fetch","isAdmin","AccessLevel","orig","toString","title","start","end","getEventColor","test","Tags","indexOf","queryStringValues","queryString","parse","location","search","mid","contact","onMemberChange","prev","console","log","plugins","dayGridPlugin","interactionPlugin","listMonthPlugin","bootstrapPlugin","themeSystem","headerToolbar","left","center","right","initialView","displayEventTime","firstDay","fixedWeekCount","editable","selectable","selectMirror","dayMaxEvents","weekends","select","handleDateSelect","eventClick","eventsSet","dateClick","xs","onClick","style","textAlign","fontSize","columnCount","border","borderColor","float","displayName","React","getRegistrationsForEventId","createInitialRegistrationForEvent","userId","getRegistrationTypesForEvent","regTypes","regTypeId","updateRegistrationTypeForEvent","sendRegistrationForEvent","registerUserForEventId","regType","createRegistration","unregisterFromEvent","regId","cb","updateRegistration","reg","updatedReg","memberId","message","numGuests","RegistrationDate","dateRegistered","RegistrationTypeId","regTypeUpdate","createRegistrationTypeUpdateRecord","msg","sendEmail","recipArray","subject","text","makeMessage","Subject","Body","Recipients","processRecipients","EventId","recip","Type","getEventById","udpateEvent","theEvent","deleteEvent","EventDisplay","url","organizer","modalToggle","rsvpMessage","rsvpModalTitle","modalTextBoxType","registrations","toggle","bind","onChangeRsvpMessage","getEvent","regs","convertRegistrationData","Details","Organizer","history","Contact","Event","DisplayName","Memo","GuestRegistrationsSummary","NumberOfGuests","editEvent","isUserEventOrganizer","length","RegistrationTypes","findRegistrationByRegId","getRegTypeIdFromEvent","updated","updateRegistrationInState","registration","messageSubject","memberMessage","toLocaleString","item","target","value","regArray","fee","guestFee","RegistrationEnabled","BasePrice","GuestPrice","TotalDue","TotalPaid","index","regData","calendarViewClick","canEdit","btnStyle","handleEditClick","handleMessagingClick","notAlreadyRegistered","canRegisterForEvent","handleRegisterClick","handleUnRegisterClick","handleAddGuest","addMessageModal","Location","email","dangerouslySetInnerHTML","__html","DescriptionHtml","scope","renderRegistrationData","Modal","show","onHide","size","backdrop","aria-labelledby","centered","Header","closeButton","onChange","Footer","handleSendMessage","handleAddMessage","registerLocale","enGB","setDefaultLocale","DateTimeRange","startDate","endDate","maxDate","setHours","minDate","onChangeStartDate","onChangeStartTime","onChangeEndTime","newDate","getDate","getHours","getMinutes","myEndDate","getTime","onChangeEndDate","prevProps","prevState","snapshot","render","dateLabel","selected","placeholderText","startLabel","showTimeSelect","showTimeSelectOnly","timeIntervals","minTime","maxTime","timeCaption","dateFormat","endLabel","EventCreator","EventType","EndTimeSpecified","RegistrationsLimit","AccessControl","AvailableForAnyLevel","AvailableForLevels","AvailableForAnyGroup","AvailableForGroups","GuestRegistrationSettings","Enabled","CreateContactMode","isEditing","onSubmit","onChangeEventLocation","onChangeEventName","startDateHandler","endDateHandler","preventDefault","response","details","editor","ClassicEditor","getData","editorConfiguration","link","decorators","addTargetToExternalLinks","mode","callback","attributes","rel","EventEditor","handleStartChange","dt","handleDelete","config","Routes","handleEventsChange","updateMember","localStorage","clear","exact","component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4c7628cd.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./NotFound.css\";\n\nexport default function NotFound() {\n    return (\n        <div className=\"NotFound text-center\">\n            <h3>Sorry, page not found!</h3>\n        </div>\n    );\n}\n","import React,{Component} from 'react';\nimport Loader from 'react-loader-spinner';\n\nexport default class EventDataLoader extends Component {\n    render() {\n        return (\n            <div className='loader'>\n                <h1>{this.props.name}</h1>\n                <h2>Loading</h2>\n                <Loader type=\"ThreeDots\" color=\"#2BAD60\" height=\"100\" width=\"100\"/>\n            </div>);\n    }\n}","// import config from '../config';\n\n\nconst apiConfig = {\n    eventsUrl: process.env.REACT_APP_API_BASE_URL + '/events',\n    contactsUrl: process.env.REACT_APP_API_BASE_URL + '/contacts',\n    registrationsUrl: process.env.REACT_APP_API_BASE_URL + '/registrations',\n    emailUrl: process.env.REACT_APP_API_BASE_URL + '/sendEmail',\n}\n\nexport default apiConfig;\n","import axios from \"axios\";\nimport apiConfig from \"./apiConfig\";\n\nexport const getContact = async (contactId) => {\n    const resp = await axios('/'+contactId, {\n        method: 'get',\n        baseURL: apiConfig.contactsUrl,\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    });\n    return resp.data.data;\n}\n","import {Redirect} from \"react-router-dom\";\n\nexport const memberEventTag = () => {\n    return 'member-event'\n}\n\nexport const emptyEvent = () => {\n    return {\n        EventType: 'Rsvp',\n        StartDate: '',\n        EndDate: '',\n        Location: '',\n        RegistrationEnabled: true,\n        EndTimeSpecified: true,\n        RegistrationsLimit: 300,\n        Tags: [memberEventTag()],\n        AccessLevel: 'Public',\n        Details: {\n            DescriptionHtml: '',\n            Organizer: {\n                Id: 0,\n            },\n            AccessControl: {\n                AccessLevel: \"Public\",\n                AvailableForAnyLevel: false,\n                AvailableForLevels: [],\n                AvailableForAnyGroup: false,\n                AvailableForGroups: []\n            },\n            GuestRegistrationSettings: {\n                Enabled: true,\n                CreateContactMode: \"NeverCreateContact\"\n            }\n        },\n        Name: ''\n    }\n}\n\nexport const redirect = (path, eventInfo) => {\n    return <Redirect to={{pathname: path, state: { eventInfo: eventInfo}}} push />\n}\n\nexport const buildRedirect = (path, member, eventInfo) => {\n    return <Redirect to={{\n        pathname: path,\n        state: {\n            member: member,\n            eventInfo: eventInfo\n        }\n    }} push />\n}\n\nexport const searchForSessionAndAdjustFields = (sessionData, sessionId) => {\n    let e = Object.assign({}, sessionData);\n\n    let sess = sessionData.Sessions.filter(x => x.Id === Number(sessionId));\n    // console.log(\"foundSession\", sess);\n    if (sess) {\n        e.sessionId = sess[0].Id;\n        e.Name = sess[0].Title;\n        e.StartDate = sess[0].StartDate;\n        e.EndDate = sess[0].EndDate;\n    }\n    // console.log(\"theEvent\", e);\n    return e;\n}\n","import axios from \"axios\";\n\nexport const callApi = async (baseUrl, method, endpoint, params, body ) => {\n    // console.log(\"CALLING API\", baseUrl,  method, endpoint, params, body);\n    // console.log(\"BODY\", body);\n    let resp = await axios(endpoint, {\n        method: method,\n        params: params,\n        baseURL: baseUrl,\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        data: body,\n    });\n    // console.log(\"RESPONSE\", resp);\n    return resp.data;\n}\n","import * as React from 'react';\nimport './EventCalendar.css';\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport interactionPlugin from '@fullcalendar/interaction'\nimport listMonthPlugin from '@fullcalendar/list';\nimport bootstrapPlugin from \"@fullcalendar/bootstrap\";\nimport EventDataLoader from \"../event-data-loader/EventDataLoader\";\nimport apiConfig from '../apiConfig';\nimport queryString from 'query-string';\nimport { getContact } from \"../ContactProvider\";\nimport {Button} from \"react-bootstrap-buttons\";\nimport {memberEventTag,buildRedirect} from \"../Utils\";\nimport {callApi} from \"../ApiProvider\";\n\nexport default class EventCalendar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fetch: true,\n        }\n    }\n\n    async componentDidMount() {\n        let prev;\n        const queryStringValues = queryString.parse(this.props.location.search);\n        if ( queryStringValues.mid && queryStringValues.mid !== \"0\") {\n            let contact = await getContact(queryStringValues.mid);\n            this.props.onMemberChange(contact);\n            this.setState({isLoggedInUser:true})\n        }\n\n        prev = queryStringValues.prev;\n\n        if (prev === 'Display') {\n            await this.setState({fetch:false});\n        } else {\n            try {\n                this.setState({events: await this.getEvents()})\n            } catch (e) {\n                console.log(\"ERROR*****\", e);\n            }\n        }\n    }\n\n    handleEventClick = (arg) => {\n        // at the point of the click to come here,  it is fullcalendar that owns the event and is using the background color.  :-(\n        if (! (this.props.member.id === 0 && arg.event.backgroundColor === 'green')) {\n            this.setState({\n                showEvent: true,\n                eventInfo: {\n                    eventId: arg.event.id,\n                    parentId: arg.event.extendedProps.parentId,\n                } });\n        } else {\n            alert(\"You must be a logged in member to view this event.\");\n        }\n    }\n\n    handleDateClick = (e) => {\n        // this.setState({editEvent: this.state.isLoggedInUser, eventInfo: e});\n        this.setState({\n            createEvent: this.state.isLoggedInUser,\n            eventInfo: {\n                date: e.date\n            }});\n    }\n\n    createEvent = () => {\n        this.setState({\n            createEvent: this.state.isLoggedInUser,\n            eventInfo: {\n                date: Date.now()\n            }\n        });\n    }\n\n\n    render() {\n        if (this.state.showEvent) {\n            return buildRedirect('/showEvent', this.props.member, this.state.eventInfo);\n        }\n        if (this.state.createEvent) {\n            return buildRedirect('/createEvent', this.props.member, this.state.eventInfo);\n        }\n\n        if (this.state.fetch) {\n            // console.log('showing loader');\n            return (<EventDataLoader name=\"Event Calendar\"/>);\n        } else {\n            return (\n                <div className='demo-app'>\n                    <div className='demo-app-main'>\n                        <FullCalendar\n                            plugins={[dayGridPlugin, interactionPlugin, listMonthPlugin, bootstrapPlugin]}\n                            themeSystem='bootstrap'\n                            headerToolbar={{\n                                left: 'prev today next',\n                                center: 'title',\n                                right: 'dayGridMonth,listMonth'\n                            }}\n                            initialView='dayGridMonth'\n                            displayEventTime={true}\n                            firstDay={1}\n                            fixedWeekCount={false}\n                            height='auto'\n                            editable={true}\n                            selectable={true}\n                            selectMirror={true}\n                            dayMaxEvents={true}\n                            weekends={true}\n                            events={this.props.events}\n                            // initialEvents={INITIAL_EVENTS} // alternatively, use the `events` setting to fetch from a feed\n                            select={this.handleDateSelect}\n                            // eventContent={renderEventContent} // custom render function\n                            eventClick={this.handleEventClick}\n                            eventsSet={this.handleEvents} // called after events are initialized/added/changed/removed\n                            dateClick={this.handleDateClick}\n                            /* you can update a remote database when these fire:\n                            eventAdd={function(){}}\n                            eventChange={function(){}}\n                            eventRemove={function(){}}\n                            */\n                        />\n                        {this.state.isLoggedInUser ? <Button xs onClick={this.createEvent}>Create Event</Button> :\n                            <div></div>}\n\n                        <div style={{textAlign: 'left',fontSize: '11px',columnCount: 5, border: '1px solid black'}}>\n                            <div>Legend</div>\n                            <div><div className=\"fc-daygrid-event-dot\" style={{borderColor: 'orange', float: 'left'}}/> Workout</div>\n                            <div><div className=\"fc-daygrid-event-dot\" style={{borderColor: 'blue', float: 'left'}}/> Education</div>\n                            <div><div className=\"fc-daygrid-event-dot\" style={{borderColor: 'green', float: 'left'}}/> Member Event</div>\n                            <div><div className=\"fc-daygrid-event-dot\" style={{borderColor: 'red', float: 'left'}}/> Race</div>\n                        </div>\n                        <div className=\"userName\">\n                            {this.props.member.displayName != null ? this.props.member.displayName : 'Anonymous'}\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n    }\n\n    firstDateEventsToRetrieve = () => {\n        let firstDate = new Date();\n        firstDate.setFullYear(firstDate.getFullYear() - 1);\n        firstDate.setMonth(firstDate.getMonth() - 6);\n\n        return firstDate.toISOString()\n    }\n\n    handleEvents = (events) => {\n        this.setState({\n            currentEvents: events\n        })\n    }\n\n    getEvents = async () => {\n        const resp = await callApi(apiConfig.eventsUrl, 'get', '/', {StartDate: this.firstDateEventsToRetrieve()}, undefined);\n        let myEvents = resp.data\n            .filter(evnt => this.shouldShowEvent(evnt))\n            .map(this.convertEventType);\n        this.props.onEventChange(myEvents);\n        this.setState({fetch:false});\n    }\n\n    shouldShowEvent = (evnt) => {\n        if( !this.props.member.isAdmin && evnt.AccessLevel==='AdminOnly' ) {\n            return false;\n        }\n        return true;\n    }\n\n    convertEventType = (orig) => {\n        let p = {\n            id: orig.Id.toString(),\n            title: orig.Name,\n            start: orig.StartDate,\n            end: orig.EndDate,\n            parentId: orig.parentId,\n            backgroundColor: this.getEventColor(orig),\n        }\n        return p;\n    }\n\n    getEventColor = (event) => {\n        let eventColor;\n        if (/Race/.test(event.Name) || (event.Tags && event.Tags.indexOf('race') > -1)) {\n            eventColor = 'red'\n        } else if (event.Tags && event.Tags.indexOf(memberEventTag()) > -1) {\n            eventColor = 'green'\n        } else if (event.parentId || (event.Tags && event.Tags.indexOf('workouts') > -1)) {\n            eventColor = 'orange'\n        } else {\n            eventColor = 'blue'\n        }\n        // console.log('EVENT TAGS', event.Tags, eventColor );\n        return eventColor;\n    }\n}\n\n","import {callApi} from \"./ApiProvider\";\nimport apiConfig from \"./apiConfig\";\n\nexport const getRegistrationsForEventId = async ( eventId) => {\n    return await callApi(apiConfig.registrationsUrl, 'get', '/event/'+eventId, undefined, undefined );\n}\n\nexport const createInitialRegistrationForEvent = async (eventId, userId) => {\n    let regTypes = await getRegistrationTypesForEvent(eventId);\n    let regTypeId = regTypes.data[0].Id;\n\n    await updateRegistrationTypeForEvent(regTypeId, eventId);\n    return await sendRegistrationForEvent(eventId, userId, regTypeId);\n}\n\nexport const registerUserForEventId = async (eventId, userId, regTypeId) => {\n    return await sendRegistrationForEvent(eventId, userId, regTypeId)\n}\n\nconst sendRegistrationForEvent = async (eventId, userId, regType) => {\n    return await callApi(apiConfig.registrationsUrl, 'post', '/', undefined, createRegistration(eventId, userId, '', 0, regType));\n}\n\nexport const unregisterFromEvent = async (regId, cb) => {\n    await callApi(apiConfig.registrationsUrl, 'delete', '/'+regId, undefined, undefined);\n}\n\nexport const updateRegistration = async (reg, regTypeId) => {\n    let updatedReg = createRegistration(reg.eventId, reg.memberId, reg.message, reg.numGuests);\n    updatedReg.Id = reg.regId;\n    updatedReg.RegistrationDate = reg.dateRegistered;\n    updatedReg.RegistrationTypeId = regTypeId;\n    await callApi(apiConfig.registrationsUrl,'put','/'+reg.regId, undefined, updatedReg);\n    return updatedReg;\n}\n//\nconst getRegistrationTypesForEvent = async (eventId) => {\n    return callApi(apiConfig.registrationsUrl, 'get', '/types/'+eventId, undefined, undefined);\n}\n\nconst updateRegistrationTypeForEvent = async (regTypeId, eventId) => {\n    let regTypeUpdate = createRegistrationTypeUpdateRecord(regTypeId, eventId);\n    let resp = await callApi(apiConfig.registrationsUrl, 'PUT', '/types/'+regTypeId, undefined, regTypeUpdate);\n    return resp;\n}\n\nconst createRegistration = (eventId, userId, msg, numGuests, regType) => {\n    return {\n        \"Event\": {\n            \"Id\": eventId\n        },\n        \"Contact\": {\n            \"Id\" : userId\n        },\n        \"RegistrationTypeId\": regType,\n        \"GuestRegistrationsSummary\": {\n            \"NumberOfGuests\": numGuests,\n            \"NumberOfGuestsCheckedIn\": 0\n        },\n        \"IsCheckedIn\": false,\n        \"ShowToPublic\": true,\n        \"RegistrationDate\": new Date(),\n        \"Memo\": msg,\n        \"RecreateInvoice\": false\n    }\n}\n\nconst createRegistrationTypeUpdateRecord = (regTypeId, eventId) => {\n    return {\n        \"Id\": regTypeId,\n        \"EventId\": eventId,\n        \"IsEnabled\": true,\n        \"Description\": \"\",\n        \"BasePrice\": 0.0000,\n        \"GuestPrice\": 0.0000,\n        \"UseTaxScopeSettings\": null,\n        \"Availability\": \"Everyone\",\n        \"AvailableForMembershipLevels\": null,\n        \"GuestRegistrationPolicy\": \"NumberOfGuests\",\n        \"CurrentRegistrantsCount\": 0,\n        \"MultipleRegistrationAllowed\": false,\n        \"UnavailabilityPolicy\": \"Undefined\",\n        \"CancellationBehaviour\": \"DoNotAllow\",\n        \"CancellationDaysBeforeEvent\": null,\n        \"IsWaitlistEnabled\": false,\n        \"Name\": \"RSVP\"\n    }\n}\n","import {callApi} from \"./ApiProvider\";\nimport apiConfig from \"./apiConfig\";\n\nexport const sendEmail = async (eventId, recipArray, subject, text) => {\n    return callApi(apiConfig.emailUrl,'post', '/', undefined, makeMessage(eventId,recipArray, subject,text));\n}\n\nconst makeMessage = (eventId, recipArray, subject, text) => {\n    return {\n        Subject: subject,\n        Body: text,\n        Recipients: processRecipients(recipArray),\n        EventId: eventId\n    }\n}\n\nconst processRecipients = (recipArray) => {\n    let recipients = recipArray.map((recip) => {\n        return {\n            Id: recip.memberId,\n            Type: \"IndividualContactRecipient\"\n        }\n    });\n    return recipients;\n}\n","import {callApi} from \"./ApiProvider\";\nimport apiConfig from \"./apiConfig\";\n\nexport const getEventById = async (eventId) => {\n    const resp = await callApi(apiConfig.eventsUrl,'get','/'+eventId, undefined, undefined);\n    return resp.data;\n}\n\nexport const udpateEvent = async (eventId, theEvent) => {\n    const resp = await callApi(apiConfig.eventsUrl, 'put', '/'+eventId, undefined, theEvent);\n    return resp.data;\n}\n\nexport const deleteEvent = async (eventId) => {\n    const resp = await callApi(apiConfig.eventsUrl, 'delete', '/'+eventId, undefined, undefined);\n    return resp.data;\n}\n","import React, {Component} from 'react';\nimport {Button} from 'react-bootstrap-buttons';\nimport EventDataLoader from \"../event-data-loader/EventDataLoader\";\nimport {getContact} from \"../ContactProvider\";\nimport {searchForSessionAndAdjustFields, buildRedirect} from \"../Utils\";\nimport {getRegistrationsForEventId, registerUserForEventId, unregisterFromEvent, updateRegistration} from \"../RegistrationsProvider\";\nimport {sendEmail} from \"../EmailProvider\";\nimport Modal from \"react-bootstrap/Modal\";\nimport \"./EventDisplay.css\";\nimport {getEventById} from \"../EventProvider\";\n\nexport default class EventDisplay extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fetch: true,\n            eventId: '',\n            url: '',\n            event: null,\n            organizer: null,\n            modalToggle: false,\n            rsvpMessage: \"\",\n            rsvpModalTitle: \"\",\n            modalTextBoxType: \"\",\n            registrations: [],\n        }\n        this.toggle = this.toggle.bind(this);\n        this.onChangeRsvpMessage = this.onChangeRsvpMessage.bind(this);\n    }\n\n    async componentDidMount() {\n        // recurring event\n        await this.getEvent();\n        let regs = await getRegistrationsForEventId(this.state.event.Id);\n        await this.setState({\n            registrations: regs.data.map(this.convertRegistrationData),\n            fetch: false,\n        });\n\n        if (this.state.event && this.state.event.Details && this.state.event.Details.Organizer) {\n            let contact = await getContact(this.state.event.Details.Organizer.Id);\n            this.setState({organizer: contact});\n        }\n    }\n\n    calendarViewClick() {\n        this.props.history.push(`/?mid=${this.props.location.state.member.id}&prev=Display`);\n    }\n\n    toggle() {\n        this.setState({modalToggle:!this.state.modalToggle});\n    }\n\n    async getEvent() {\n        if (this.props.location.state.eventInfo.parentId && this.state.fetch) {\n            let event = await getEventById(this.props.location.state.eventInfo.parentId);\n            await this.setState({event: searchForSessionAndAdjustFields(event, this.props.location.state.eventInfo.eventId),});\n        } else {\n            let event = await getEventById(this.props.location.state.eventInfo.eventId);\n            await this.setState({event: event});\n        }\n    }\n\n    convertRegistrationData(reg, orig) {\n        return {\n            regId: reg.Id,\n            memberId: reg.Contact.Id,\n            eventId: reg.Event.Id,\n            name: reg.DisplayName,\n            message: reg.Memo,\n            numGuests: reg.GuestRegistrationsSummary && reg.GuestRegistrationsSummary.NumberOfGuests ? reg.GuestRegistrationsSummary.NumberOfGuests : 0,\n            dateRegistered: reg.RegistrationDate\n        }\n    }\n\n    handleEditClick() {\n        this.setState({editEvent: true});\n    }\n\n    canEdit() {\n        return  this.props.location.state.member && this.props.location.state.eventInfo.parentId === undefined && (\n            this.props.location.state.member.isAdmin || this.isUserEventOrganizer()\n        )\n    }\n\n    isUserEventOrganizer() {\n        return this.state.event.Details && this.state.event.Details.Organizer && this.props.location.state.member.id === this.state.event.Details.Organizer.Id;\n    }\n\n    notAlreadyRegistered() {\n        return this.props.location.state.member && this.state.registrations.filter( x => this.props.location.state.member.id === x.memberId).length === 0\n    }\n\n    async handleRegisterClick() {\n        let data = await registerUserForEventId(this.state.event.Id, this.props.location.state.member.id, this.state.event.Details.RegistrationTypes[0].Id);\n        this.setState( state => {\n            const registrations = [this.convertRegistrationData(data.data, null), ...state.registrations];\n            return {\n                registrations\n            }\n        })\n    }\n\n    async handleUnRegisterClick(regId) {\n        await unregisterFromEvent(regId, (data) => {});\n        this.setState( state => {\n            const registrations = state.registrations.filter(reg => reg.regId !== regId);\n            return {\n                registrations\n            }\n        })\n    }\n\n    getRegTypeIdFromEvent() {\n        return this.state.event.Details.RegistrationTypes[0].Id\n    }\n\n    async handleAddGuest(regId) {\n        let reg = this.findRegistrationByRegId(regId);\n        reg.numGuests = reg.numGuests+1;\n        let regTypeId = this.getRegTypeIdFromEvent();\n        let updated = await updateRegistration(reg,regTypeId);\n        updated.DisplayName = this.props.location.state.member.displayName;\n        await this.updateRegistrationInState(reg, updated);\n    }\n\n    async handleAddMessage() {\n        let reg = Object.assign({}, this.state.registration);\n        reg.message = this.state.rsvpMessage;\n\n        let regTypeId = this.getRegTypeIdFromEvent();\n        let updated = await updateRegistration(reg,regTypeId);\n        updated.DisplayName = this.props.location.state.member.displayName;\n        await this.updateRegistrationInState(reg, updated);\n\n        this.setState({registration:null, rsvpMessage:''});\n        this.toggle();\n    }\n\n    async handleMessagingClick() {\n        await this.setState({rsvpModalTitle: \"Message to RSVP Contacts\", modalTextBoxType: \"textarea\"})\n        this.toggle();\n    }\n\n    async handleSendMessage() {\n        await sendEmail(this.state.event.Id, this.state.registrations, this.messageSubject(), this.memberMessage());\n        await this.setState({\n            rsvpModalTitle: '',\n            rsvpMessage: '',\n            modalTextBoxType: \"text\"\n        });\n        this.toggle();\n    }\n    messageSubject() {\n        return \"Event Update: \"+this.state.event.Name+ \"  \"+ new Date(this.state.event.StartDate).toLocaleString();\n    }\n    memberMessage() {\n        return \"<html><body>This is concerning the event you RSVP'd to on: \"+new Date(this.state.event.StartDate).toLocaleString()+\"<h2>\"+this.state.event.Name\n        + \"</h2><p><h3><u>Message from the event organizer</u>:</h3>\"+ this.state.rsvpMessage+\"</body></html>\";\n    }\n\n    async updateRegistrationInState(reg, data) {\n        await this.setState(state => {\n            const registrations = state.registrations.map((item) => {\n                return item.regId === reg.regId ? this.convertRegistrationData(data) : item;\n            });\n\n            return {\n                registrations\n            };\n        });\n    }\n\n    async addMessageModal(regId) {\n        let reg = this.findRegistrationByRegId(regId);\n        await this.setState({registration: reg, rsvpMessage: reg.message, rsvpModalTitle: \"RSVP Message\", modalTextBoxType: \"text\"});\n        this.toggle();\n    }\n\n    onChangeRsvpMessage(x) {\n        this.setState({rsvpMessage: x.target.value});\n    }\n\n    findRegistrationByRegId(regId) {\n        let regArray = this.state.registrations.filter(reg => reg.regId === regId);\n        if (regArray.length === 1) {\n            // console.log(\"find reg returning -> \", regArray[0]);\n            return regArray[0];\n        } else {\n            // console.log(\"find reg by reg id -- returning null\");\n            return null;\n        }\n    }\n    canRegisterForEvent() {\n        let fee = 0.0;\n        let guestFee = 0.0;\n\n        if (!this.state.event.RegistrationEnabled) {\n            return false;\n        }\n\n        this.state.event.Details.RegistrationTypes.map(reg => {\n            fee += reg.BasePrice;\n            guestFee += reg.GuestPrice;\n            return null;\n        })\n\n        if (this.state.event.Details.TotalDue === 0 && this.state.event.Details.TotalPaid === 0 && this.props.location.state.member.id !== 0\n            && fee === 0.0 && guestFee === 0.0 && !this.state.event.Sessions) {\n            return true;\n        }\n        return false;\n    }\n\n    renderRegistrationData() {\n        return this.state.registrations.map( (reg, index) => {\n            const { regId, name, message, numGuests } = reg;\n            return <tr key={regId}>\n                <td>{name}</td>\n                <td>{numGuests}</td>\n                <td>{message}</td>\n            </tr>\n        })\n    }\n\n    render() {\n        let regData = this.state.registrations ? this.state.registrations.filter(reg => reg.memberId === this.props.location.state.member.id):[];\n\n        if (this.state.fetch) {\n            return (<EventDataLoader name={this.props.location.state.name}/>);\n        } else if (this.state.editEvent) {\n            return buildRedirect('/editEvent', this.props.location.state.member, this.props.location.state.eventInfo);\n        } else {\n            return (\n                <div>\n                    <Button xs onClick={() => this.calendarViewClick()}>Calendar View</Button>\n                    {this.canEdit() && <Button xs btnStyle=\"primary\" onClick={() => this.handleEditClick()}>Edit Event</Button>}\n                    {this.canEdit() && <Button xs btnStyle=\"warning\" onClick={() => this.handleMessagingClick()}>Message RSVPd Members</Button>}\n                    {this.notAlreadyRegistered() && this.canRegisterForEvent() && <Button xs btnStyle=\"success\" onClick={() => this.handleRegisterClick()}>RSVP</Button>}\n                    {regData.length===1 && !this.isUserEventOrganizer() && <Button xs btnStyle=\"danger\" onClick={() => this.handleUnRegisterClick(regData[0].regId) }>Unregister</Button> }\n                    {regData.length===1 && <Button xs btnStyle=\"secondary\" onClick={() => this.handleAddGuest(regData[0].regId)}>Add Guest</Button> }\n                    {regData.length===1 && <Button xs btnStyle=\"secondary\" onClick={() => this.addMessageModal(regData[0].regId)}>Add/Edit Comment</Button> }\n\n                    <h2>{this.state.event.Name}</h2>\n                    <div className=\"event_id\">\n                        <label>Event Id: </label>&nbsp;&nbsp;\n                        {this.state.event.Id}\n                    </div>\n                    <div className=\"event-title\">\n                        <label>Event Name: </label>&nbsp;&nbsp;\n                        {this.state.event.Name}\n                    </div>\n                    <div className=\"event-start\">\n                        <label>Event Start Date/Time:</label>&nbsp;&nbsp;\n                        {new Date(this.state.event.StartDate).toLocaleString()}\n                    </div>\n                    <div className=\"event-end\">\n                        <label>Event End Date/Time:</label>&nbsp;&nbsp;\n                        {new Date(this.state.event.EndDate).toLocaleString()}\n                    </div>\n                    <div className=\"location\">\n                        <label>Event Location: </label>&nbsp;&nbsp;\n                        {this.state.event.Location}\n                    </div>\n\n                    {this.state.organizer && <div className=\"organizer\">\n                        <label>Organizer: </label>&nbsp;&nbsp;\n                        {this.state.organizer.displayName + '(' + this.state.organizer.email + ')'}\n                    </div>}\n\n                    <div className=\"descriptionHtml\">\n                        <label>Description: </label><br/>&nbsp;&nbsp;\n                        <div dangerouslySetInnerHTML={{__html: this.state.event.Details.DescriptionHtml}} />\n                    </div>\n\n                    { this.state.event.RegistrationEnabled && <div className=\"registrations\">\n                        <label>Registrations: </label><br/>\n                        <table id='registrations' className=\"table-striped\">\n                            <tbody>\n                                <tr>\n                                    {/*<th scope=\"col\">Registration Id</th>*/}\n                                    <th scope=\"col\">Name</th>\n                                    <th scope=\"col\">#Guests</th>\n                                    {/*<th scope=\"col\">Date Registered</th>*/}\n                                    <th scope=\"col\">Comments</th>\n                                </tr>\n                                {this.renderRegistrationData()}\n                            </tbody>\n                        </table>\n                    </div> }\n\n                    <Modal\n                        show={this.state.modalToggle}\n                        onHide={this.toggle}\n                        size=\"lg\"\n                        backdrop=\"static\"\n                        aria-labelledby=\"contained-modal-title-vcenter\"\n                        centered\n                    >\n                        <Modal.Header closeButton>\n                            <Modal.Title id=\"contained-modal-title-vcenter\">\n                                {this.state.rsvpModalTitle}\n                            </Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            <h4>Please enter your message:</h4>\n                            <p>\n                                {this.state.modalTextBoxType==='textarea' ? <textarea\n                                        value={this.state.rsvpMessage}\n                                        className=\"form-control\"\n                                        onChange={this.onChangeRsvpMessage}\n                                    />\n                                    :\n                                    <input type=\"text\"\n                                       value={this.state.rsvpMessage}\n                                       className=\"form-control\"\n                                       onChange={this.onChangeRsvpMessage}\n                                       />\n                                    }\n                            </p>\n                        </Modal.Body>\n                        <Modal.Footer>\n                            <Button xs btnStyle=\"danger\" onClick={this.toggle}>Cancel</Button>\n                            {this.state.modalTextBoxType === 'textarea' ?\n                                <Button xs onClick={() => this.handleSendMessage()}>Send Message</Button>\n                                :\n                                <Button xs onClick={() => this.handleAddMessage()}>Save</Button>\n                            }\n                        </Modal.Footer>\n                    </Modal>\n                    <div className=\"userName\">\n                        {this.props.location.state.member.displayName != null ? this.props.location.state.member.displayName : 'Anonymous'}\n                    </div>\n                </div>\n            );\n        }\n    }\n}\n","import React, {Component} from 'react';\nimport DatePicker from 'react-datepicker';\nimport {registerLocale, setDefaultLocale} from \"react-datepicker\";\nimport \"./DateTimeRange.css\";\nimport enGB from \"date-fns/locale/en-GB\";\n\nregisterLocale(\"en-GB\", enGB);\n\nsetDefaultLocale(\"en-GB\")\n\nexport default class DateTimeRange extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            startDate: this.props.startDate != null ? new Date(this.props.startDate) : null,\n            endDate: this.props.endDate != null ? new Date(this.props.endDate) : null,\n            maxDate: this.props.endDate ? new Date(new Date(this.props.endDate).setHours(23, 59, 59)) : null,\n            minDate: this.props.startDate ? new Date(new Date(this.props.startDate).setHours(0, 0, 0)) : null,\n        }\n        this.onChangeStartDate = this.onChangeStartDate.bind(this);\n        this.onChangeStartTime = this.onChangeStartTime.bind(this);\n        this.onChangeEndTime = this.onChangeEndTime.bind(this);\n    }\n\n    async onChangeStartDate(date) {\n        let newDate = new Date(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes());\n        if (this.props.endDate === null) {\n            let myEndDate = new Date(newDate.getTime());\n            await this.setState({endDate: new Date(myEndDate.setHours(23, 59, 59, 0))});\n        }\n        await this.setState({\n            startDate: newDate,\n            endDate: new Date(this.state.endDate.setFullYear(date.getFullYear(), date.getMonth(), date.getDate())),\n            minDate: new Date(date.setHours(0, 0, 0, 0)),\n            maxDate: new Date(date.setHours(23, 59, 59, 0)),\n        });\n        this.props.onChangeStartDate(this.state.startDate);\n        this.props.onChangeEndDate(this.state.endDate);\n    }\n\n    async onChangeStartTime(date) {\n        if (this.state.endDate < this.state.startDate) {\n            await this.setState({\n                startDate: date,\n                endDate: date\n            })\n        } else {\n            await this.setState({startDate: date});\n        }\n        this.props.onChangeStartDate(this.state.startDate);\n        this.props.onChangeEndDate(this.state.endDate);\n    }\n\n    onChangeEndTime(date) {\n        this.setState({endDate: date})\n        this.props.onChangeEndDate(date);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.state.startDate !== prevState.startDate || this.state.endDate !== prevState.endDate) {\n            this.render();\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"dateTimeRangeSelector\">\n                <div className=\"dateTimeRangeSelector-date\">\n                    <label>{this.props.dateLabel}</label>\n                    <DatePicker\n                        selected={this.props.startDate}\n                        placeholderText=\"Click to select a date\"\n                        onChange={date => this.onChangeStartDate(date)}\n                    />\n                </div>\n                {this.props.startDate != null ?\n                        <div className=\"dateTimeRangeSelector-start\">\n                            <label>{this.props.startLabel}</label>\n                            <DatePicker\n                                selected={this.props.startDate}\n                                onChange={date => this.onChangeStartTime(date)}\n                                showTimeSelect\n                                showTimeSelectOnly\n                                timeIntervals={15}\n                                minTime={this.state.minDate}\n                                maxTime={this.state.endDate}\n                                timeCaption=\"Start Time\"\n                                dateFormat=\"h:mm aa\"\n                            />\n                        </div> : <div /> }\n                {this.props.startDate != null ?\n                        <div className=\"dateTimeRangeSelector-end\">\n                            <label>{this.props.endLabel}</label>\n                            <DatePicker\n                                selected={this.props.endDate}\n                                onChange={date => this.onChangeEndTime(date)}\n                                showTimeSelect\n                                showTimeSelectOnly\n                                timeIntervals={15}\n                                minTime={this.state.startDate}\n                                maxTime={this.state.maxDate}\n                                timeCaption=\"End Time\"\n                                dateFormat=\"h:mm aa\"\n                            />\n\n                        </div>\n                    : <div/>}\n            </div>\n        )\n    }\n}\n","import React, {Component} from 'react';\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport EventDataLoader from \"../event-data-loader/EventDataLoader\";\nimport {emptyEvent} from '../Utils';\nimport \"./EventCreator.css\";\nimport DateTimeRange from \"../date-time-range/DateTimeRange\";\nimport {Button} from \"react-bootstrap-buttons\";\nimport {callApi} from \"../ApiProvider\";\nimport apiConfig from \"../apiConfig\";\nimport {createInitialRegistrationForEvent} from \"../RegistrationsProvider\";\n\nexport default class EventCreator extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            event: emptyEvent(),\n            isEditing: true,\n            eventInfo: props.location.state.eventInfo,\n            fetch: true\n        }\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onChangeEventLocation = this.onChangeEventLocation.bind(this);\n        this.onChangeEventName = this.onChangeEventName.bind(this);\n        this.startDateHandler = this.startDateHandler.bind(this);\n        this.endDateHandler = this.endDateHandler.bind(this);\n    }\n\n    async onSubmit(e) {\n        e.preventDefault();\n\n        let theEvent = Object.assign({}, this.state.event);\n        theEvent.StartDate = theEvent.StartDate.toISOString();\n        theEvent.EndDate = theEvent.EndDate.toISOString();\n        let response = await callApi(apiConfig.eventsUrl,'post','/',undefined, theEvent);\n\n        await createInitialRegistrationForEvent(response.data, this.props.location.state.member.id);\n\n        this.setState({event: emptyEvent()});\n\n        this.props.history.push(`/?mid=${this.props.location.state.member.id}`);\n    }\n\n    onChangeEventName(e) {\n        this.setState({event: {...this.state.event, Name: e.target.value }})\n    }\n\n    onChangeEventLocation(e) {\n        this.setState({event:{...this.state.event, Location: e.target.value}})\n    }\n\n    async componentDidMount() {\n        let startDate = null;\n        let endDate = null;\n\n        await this.setState({\n            eventInfo: this.props.location.state.eventInfo\n        })\n        if (this.state.eventInfo.date) {  // user clicked on a date to create event.\n            startDate = new  Date(new Date(this.state.eventInfo.date).setHours(8,0,0));\n            endDate = new  Date(new Date(this.state.eventInfo.date).setHours(20,0,0));\n        }\n\n        await this.setState({event: {...this.state.event, StartDate: startDate}});\n        await this.setState({event: {...this.state.event, EndDate: endDate}});\n        await this.setState({fetch:false});\n\n        let details = Object.assign({}, this.state.event.Details)\n         details.Organizer = {\n            Id: this.props.location.state.member.id\n        }\n        this.setState({event: {...this.state.event, Details:details}});\n    }\n\n    startDateHandler(date) {\n        this.setState({event: {...this.state.event, StartDate: date}});\n    }\n\n    endDateHandler(date) {\n        this.setState({event: {...this.state.event, EndDate: date}});\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.state.event.StartDate !== prevState.event.StartDate || this.state.event.EndDate !== prevState.event.EndDate) {\n            this.render()\n        }\n    }\n\n    calendarViewClick() {\n        this.props.history.push(`/?mid=${this.props.location.state.member.id}`);\n    }\n\n    render() {\n        if (this.state.fetch) {\n            return <EventDataLoader name={this.props.location.state.name}/>;\n        } else {\n            return (\n                <div className=\"App\">\n                     <div className=\"editor\">\n                         <form onSubmit={this.onSubmit}>\n                             <div className=\"form-group\" style={{'text-align':'center'}}>\n                                 <Button xs onClick={() => this.calendarViewClick()}>Calendar View</Button>\n                             </div>\n                            <div className=\"form-group\">\n                                <label>Event Name: </label>\n                                <input type=\"text\"\n                                        className=\"form-control\"\n                                        value={this.state.event.Name}\n                                        onChange={this.onChangeEventName}/>\n                            </div>\n                            <div className=\"form-group\">\n                                <DateTimeRange dateLabel=\"Event Date: \"\n                                               startLabel=\"Start Time: \"\n                                               endLabel=\"End Time: \"\n                                               startDate={this.state.event.StartDate}\n                                               endDate={this.state.event.EndDate}\n                                               onChangeStartDate={this.startDateHandler}\n                                               onChangeEndDate={this.endDateHandler}/>\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Event Location: </label>\n                                <input type=\"text\"\n                                        className=\"form-control\"\n                                        value={this.state.event.Location}\n                                        onChange={this.onChangeEventLocation}/>\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label>Description</label>\n                                <CKEditor\n                                    editor={ ClassicEditor }\n                                    data={this.state.event.Details.DescriptionHtml}\n                                    onChange={ ( event, editor ) => {\n                                        let details = this.state.event.Details;\n                                        details.DescriptionHtml = editor.getData();\n                                        this.setState({event: {...this.state.event, Details: details}});\n                                    } }\n                                />\n                            </div>\n\n                            <div className=\"form-group\" style={{'text-align':'center'}}>\n                                <Button xs btnStyle=\"primary\" type=\"submit\">Create Event</Button>\n                            </div>\n\n                        </form>\n                    </div>\n                    <div className=\"userName\">\n                        {this.props.location.state.member.displayName != null ? this.props.location.state.member.displayName : 'Anonymous'}\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\n","import React, {Component} from 'react';\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\n// import {getEventById, updateEvent, deleteEvent} from \"../../utils/WildApricotEvents\";\nimport {deleteEvent, getEventById, udpateEvent} from \"../EventProvider\";\nimport {getContact} from \"../ContactProvider\";\nimport EventDataLoader from \"../event-data-loader/EventDataLoader\";\nimport {emptyEvent, searchForSessionAndAdjustFields} from \"../Utils\";\nimport DateTimeRange from \"../date-time-range/DateTimeRange\";\nimport {Button} from \"react-bootstrap-buttons\";\n\nimport \"./EventEditor.css\";\n\nconst editorConfiguration = {\n    link: {\n        link: {\n            decorators: {\n                addTargetToExternalLinks: {\n                    mode: 'automatic',\n                    callback: url => /^(https?:)?\\/\\//.test( url ),\n                    attributes: {\n                        target: '_blank',\n                        rel: 'noopener noreferrer'\n                    }\n                }\n            }\n        }\n    }\n};\n\nexport default class EventEditor extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            event: emptyEvent(),\n            isEditing: true,\n            eventInfo: props.location.state.eventInfo,\n            member: props.location.state.member,\n            fetch: true\n        }\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onChangeEventLocation = this.onChangeEventLocation.bind(this);\n        this.onChangeEventName = this.onChangeEventName.bind(this);\n        this.startDateHandler = this.startDateHandler.bind(this);\n        this.endDateHandler = this.endDateHandler.bind(this);\n        this.handleDelete = this.handleDelete.bind(this);\n    }\n\n    async onSubmit(e) {\n        e.preventDefault();\n\n        // let theEvent = Object.assign({}, this.state.event);\n        await udpateEvent(this.state.event.Id, this.state.event);\n        this.setState({event: emptyEvent()});\n        this.props.history.push(`/?mid=${this.state.member.id}`);\n    }\n\n    onChangeEventName(e) {\n        this.setState({event: {...this.state.event, Name: e.target.value }})\n    }\n\n    onChangeEventLocation(e) {\n        this.setState({event:{...this.state.event, Location: e.target.value}})\n    }\n\n    async getEvent() {\n        if (this.props.location.state.eventInfo.parentId && this.state.fetch) {\n            let event = await getEventById(this.props.location.state.eventInfo.parentId);\n            await this.setState({event: searchForSessionAndAdjustFields(event, this.props.location.state.eventInfo.eventId),});\n        } else {\n            let event = await getEventById(this.props.location.state.eventInfo.eventId);\n            await this.setState({event: event});\n        }\n    }\n\n    async componentDidMount() {\n        // await getAuthTokens((data) => this.setState({waToken: data}));\n        this.setState({\n            member: this.props.location.state.member,\n            eventInfo: this.props.location.state.eventInfo\n        })\n\n        await this.getEvent();\n        this.setState({event:{...this.state.event,StartDate: new Date(this.state.event.StartDate)}});\n        this.setState({event:{...this.state.event,EndDate: new Date(this.state.event.EndDate)}});\n        this.setState({fetch:false});\n\n        if (this.props.location.state.eventInfo.date) {\n            let maxTime = new Date(this.props.location.state.eventInfo.date.getTime());\n            this.setState({...this.state.event, startDate: this.props.location.state.eventInfo.date});\n            this.setState({...this.state.event, endDate: new Date(maxTime.setHours(23,59,59))});\n        }\n\n        if (this.state.event && this.state.event.Details && this.state.event.Details.Organizer) {\n            await getContact(this.state.event.Details.Organizer.Id, (data) => {\n                this.setState({organizer: data});\n            });\n            // console.log(\"contact\", this.state.organizer);\n        }\n    }\n\n    startDateHandler(date) {\n        this.setState({event: {...this.state.event, StartDate: date}});\n    }\n\n    endDateHandler(date) {\n        this.setState({event: {...this.state.event, EndDate: date}});\n    }\n\n    async handleDelete() {\n        await deleteEvent(this.state.event.Id);\n        this.props.history.push(`/?mid=${this.state.member.id}`);\n    }\n\n    calendarViewClick() {\n        this.props.history.push(`/?mid=${this.props.location.state.member.id}&prev=Display`);\n    }\n\n    handleStartChange = async (dt) => {\n        await this.setState({date: {...this.state.date, date: dt}});\n    }\n\n    render() {\n        if (this.state.fetch) {\n            return <EventDataLoader name={this.props.location.state.name}/>;\n        } else {\n            return (\n                <div className=\"App\">\n                     <div className=\"editor\">\n                         <div className=\"form-group\" style={{'textAlign':'center'}}>\n                             <Button xs onClick={() => this.calendarViewClick()}>Calendar View</Button>\n                             <Button xs btnStyle=\"danger\" onClick={() => this.handleDelete()}>Delete Event</Button>\n                         </div>\n                        <form onSubmit={this.onSubmit}>\n                            <div className=\"form-group\">\n                                <label>Event Id: </label>\n                                {this.state.event.Id}\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Event Name: </label>\n                                <input type=\"text\"\n                                        className=\"form-control\"\n                                        value={this.state.event.Name}\n                                        onChange={this.onChangeEventName}/>\n                            </div>\n                            <div className=\"form-group\">\n                                <DateTimeRange dateLabel=\"Event Date: \"\n                                               startLabel=\"Start Time: \"\n                                               endLabel=\"End Time: \"\n                                               startDate={this.state.event.StartDate}\n                                               endDate={this.state.event.EndDate}\n                                               onChangeStartDate={this.startDateHandler}\n                                               onChangeEndDate={this.endDateHandler}/>\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Event Location: </label>\n                                <input type=\"text\"\n                                        className=\"form-control\"\n                                        value={this.state.event.Location}\n                                        onChange={this.onChangeEventLocation}/>\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label>Description</label>\n                                <CKEditor\n                                    config={editorConfiguration}\n                                    editor={ ClassicEditor }\n                                    data={this.state.event.Details.DescriptionHtml}\n                                    onChange={ ( event, editor ) => {\n                                            let details = this.state.event.Details;\n                                            details.DescriptionHtml = editor.getData();\n                                            this.setState({event: {...this.state.event, Details: details}});\n                                        }\n                                    }\n                                />\n                            </div>\n\n                            <div className=\"form-group button\" style={{'textAlign':'center'}}>\n                                <Button xs btnStyle=\"primary\" type=\"submit\">Save Event</Button>\n                            </div>\n\n                        </form>\n                    </div>\n                    <div className=\"userName\">\n                        {this.props.location.state.member.displayName != null ? this.props.location.state.member.displayName : 'Anonymous'}\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\n","import React, {Component} from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport NotFound from \"./containers/NotFound\";\nimport EventCalendar from \"./components/event-calendar/EventCalendar\";\nimport EventDisplay from \"./components/event-display/EventDisplay\";\nimport EventCreator from \"./components/event-create/EventCreator\";\nimport EventEditor from \"./components/event-edit/EventEditor\";\n\nexport default class Routes extends Component {\n    constructor(props) {\n        super(props);\n        localStorage.clear();\n        this.state = {\n            member: {id: 0, isAdmin: false},\n            events: []\n        }\n        console.log(\"IN ROUTES\")\n    }\n\n    handleEventsChange = (events) => {\n        this.setState({events: events})\n    }\n\n    updateMember = (member) => {\n        if (member != null) {\n            this.setState({member: member});\n        }\n    }\n    //\n    // updateToken = (token) => {\n    //     // console.log(\"Updating Token -> \", token)\n    //     this.setState( {token: {timestamp: Date.now(), waToken: token}})\n    // }\n\n    render() {\n        return (\n            <Switch>\n                <Route exact path=\"/\" render={props => <EventCalendar  {...props}\n                                                                       onEventChange={this.handleEventsChange}\n                                                                       events={this.state.events}\n                                                                       onMemberChange={this.updateMember}\n                                                                       member={this.state.member}\n                />}/>\n                <Route exact path=\"/showEvent\" component={EventDisplay}/>\n                <Route exact path=\"/createEvent\" component={EventCreator} />\n                <Route exact path=\"/editEvent\" component={EventEditor} />\n                <Route>\n                    <NotFound />\n                </Route>\n            </Switch>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport './App.css';\nimport Routes from \"./Routes\";\n\nexport default class App extends Component {\n    render() {\n        // console.log('PROPS', this.props);\n        return (\n            <div className=\"App container py-3\">\n                <Routes/>\n            </div>\n        );\n    }\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Router>\n            <App />\n        </Router>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}