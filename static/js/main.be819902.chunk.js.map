{"version":3,"sources":["containers/NotFound.js","components/event-data-loader/EventDataLoader.js","components/apiConfig.js","components/ContactProvider.js","components/Utils.js","components/ApiProvider.js","components/event-calendar/EventCalendar.js","components/RegistrationsProvider.js","components/EmailProvider.js","components/EventProvider.js","components/event-display/EventDisplay.js","components/date-time-range/DateTimeRange.js","components/event-create/EventCreator.js","components/event-edit/EventEditor.js","Routes.js","App.js","reportWebVitals.js","index.js"],"names":["NotFound","className","EventDataLoader","this","props","name","type","color","height","width","Component","apiConfig","eventsUrl","process","contactsUrl","registrationsUrl","emailUrl","getContact","contactId","a","axios","method","baseURL","headers","resp","data","buildRedirect","path","member","eventInfo","to","pathname","state","push","searchForSessionAndAdjustFields","sessionData","sessionId","e","Object","assign","sess","Sessions","filter","x","Id","Number","Name","Title","StartDate","EndDate","callApi","baseUrl","endpoint","params","body","EventCalendar","handleEventClick","arg","setState","showEvent","eventId","event","id","parentId","extendedProps","handleDateClick","createEvent","isLoggedInUser","date","Date","now","firstDateEventsToRetrieve","firstDate","setFullYear","getFullYear","setMonth","getMonth","toISOString","handleEvents","events","currentEvents","getEvents","undefined","myEvents","evnt","shouldShowEvent","map","convertEventType","onEventChange","fetch","isAdmin","AccessLevel","orig","toString","title","start","end","backgroundColor","getEventColor","test","Tags","indexOf","queryStringValues","queryString","parse","location","search","mid","contact","onMemberChange","prev","console","log","plugins","dayGridPlugin","interactionPlugin","listMonthPlugin","bootstrapPlugin","themeSystem","headerToolbar","left","center","right","initialView","displayEventTime","firstDay","fixedWeekCount","editable","selectable","selectMirror","dayMaxEvents","weekends","select","handleDateSelect","eventClick","eventsSet","dateClick","xs","onClick","displayName","React","getRegistrationsForEventId","createInitialRegistrationForEvent","userId","getRegistrationTypesForEvent","regTypes","regTypeId","updateRegistrationTypeForEvent","sendRegistrationForEvent","registerUserForEventId","regType","createRegistration","unregisterFromEvent","regId","cb","updateRegistration","reg","updatedReg","memberId","message","numGuests","RegistrationDate","dateRegistered","RegistrationTypeId","regTypeUpdate","createRegistrationTypeUpdateRecord","msg","sendEmail","recipArray","subject","text","makeMessage","Subject","Body","Recipients","processRecipients","EventId","recip","Type","getEventById","udpateEvent","theEvent","deleteEvent","EventDisplay","url","organizer","modalToggle","rsvpMessage","rsvpModalTitle","modalTextBoxType","registrations","toggle","bind","onChangeRsvpMessage","getEvent","regs","convertRegistrationData","Details","Organizer","history","Contact","Event","DisplayName","Memo","GuestRegistrationsSummary","NumberOfGuests","editEvent","isUserEventOrganizer","length","RegistrationTypes","findRegistrationByRegId","getRegTypeIdFromEvent","updated","updateRegistrationInState","registration","messageSubject","memberMessage","toLocaleString","item","target","value","regArray","fee","guestFee","RegistrationEnabled","BasePrice","GuestPrice","TotalDue","TotalPaid","index","regData","calendarViewClick","canEdit","btnStyle","handleEditClick","handleMessagingClick","notAlreadyRegistered","canRegisterForEvent","handleRegisterClick","handleUnRegisterClick","handleAddGuest","addMessageModal","Location","email","dangerouslySetInnerHTML","__html","DescriptionHtml","scope","renderRegistrationData","Modal","show","onHide","size","backdrop","aria-labelledby","centered","Header","closeButton","onChange","Footer","handleSendMessage","handleAddMessage","registerLocale","enGB","setDefaultLocale","DateTimeRange","startDate","endDate","maxDate","setHours","minDate","onChangeStartDate","onChangeStartTime","onChangeEndTime","newDate","getDate","getHours","getMinutes","myEndDate","getTime","onChangeEndDate","prevProps","prevState","snapshot","render","dateLabel","selected","placeholderText","startLabel","showTimeSelect","showTimeSelectOnly","timeIntervals","minTime","maxTime","timeCaption","dateFormat","endLabel","EventCreator","EventType","EndTimeSpecified","RegistrationsLimit","AccessControl","AvailableForAnyLevel","AvailableForLevels","AvailableForAnyGroup","AvailableForGroups","GuestRegistrationSettings","Enabled","CreateContactMode","isEditing","onSubmit","onChangeEventLocation","onChangeEventName","startDateHandler","endDateHandler","preventDefault","response","details","style","editor","ClassicEditor","getData","editorConfiguration","link","decorators","addTargetToExternalLinks","mode","callback","attributes","rel","EventEditor","handleStartChange","dt","handleDelete","config","Routes","handleEventsChange","updateMember","localStorage","clear","exact","component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be819902.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./NotFound.css\";\n\nexport default function NotFound() {\n    return (\n        <div className=\"NotFound text-center\">\n            <h3>Sorry, page not found!</h3>\n        </div>\n    );\n}\n","import React,{Component} from 'react';\nimport Loader from 'react-loader-spinner';\n\nexport default class EventDataLoader extends Component {\n    render() {\n        return (\n            <div className='loader'>\n                <h1>{this.props.name}</h1>\n                <h2>Loading</h2>\n                <Loader type=\"ThreeDots\" color=\"#2BAD60\" height=\"100\" width=\"100\"/>\n            </div>);\n    }\n}","// import config from '../config';\n\n\nconst apiConfig = {\n    eventsUrl: process.env.REACT_APP_API_BASE_URL + '/events',\n    contactsUrl: process.env.REACT_APP_API_BASE_URL + '/contacts',\n    registrationsUrl: process.env.REACT_APP_API_BASE_URL + '/registrations',\n    emailUrl: process.env.REACT_APP_API_BASE_URL + '/sendEmail',\n}\n\nexport default apiConfig;\n","import axios from \"axios\";\nimport apiConfig from \"./apiConfig\";\n\nexport const getContact = async (contactId) => {\n    const resp = await axios('/'+contactId, {\n        method: 'get',\n        baseURL: apiConfig.contactsUrl,\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    });\n    return resp.data.data;\n}\n","import {Redirect} from \"react-router-dom\";\n\nexport const memberEventTag = () => {\n    return 'member-event'\n}\n\nexport const emptyEvent = () => {\n    return {\n        EventType: 'Rsvp',\n        StartDate: '',\n        EndDate: '',\n        Location: '',\n        RegistrationEnabled: true,\n        EndTimeSpecified: true,\n        RegistrationsLimit: 300,\n        Tags: [memberEventTag()],\n        AccessLevel: 'Public',\n        Details: {\n            DescriptionHtml: '',\n            Organizer: {\n                Id: 0,\n            },\n            AccessControl: {\n                AccessLevel: \"Public\",\n                AvailableForAnyLevel: false,\n                AvailableForLevels: [],\n                AvailableForAnyGroup: false,\n                AvailableForGroups: []\n            },\n            GuestRegistrationSettings: {\n                Enabled: true,\n                CreateContactMode: \"NeverCreateContact\"\n            }\n        },\n        Name: ''\n    }\n}\n\nexport const redirect = (path, eventInfo) => {\n    return <Redirect to={{pathname: path, state: { eventInfo: eventInfo}}} push />\n}\n\nexport const buildRedirect = (path, member, eventInfo) => {\n    return <Redirect to={{\n        pathname: path,\n        state: {\n            member: member,\n            eventInfo: eventInfo\n        }\n    }} push />\n}\n\nexport const searchForSessionAndAdjustFields = (sessionData, sessionId) => {\n    let e = Object.assign({}, sessionData);\n\n    let sess = sessionData.Sessions.filter(x => x.Id === Number(sessionId));\n    // console.log(\"foundSession\", sess);\n    if (sess) {\n        e.sessionId = sess[0].Id;\n        e.Name = sess[0].Title;\n        e.StartDate = sess[0].StartDate;\n        e.EndDate = sess[0].EndDate;\n    }\n    // console.log(\"theEvent\", e);\n    return e;\n}\n","import axios from \"axios\";\n\nexport const callApi = async (baseUrl, method, endpoint, params, body ) => {\n    // console.log(\"CALLING API\", baseUrl,  method, endpoint, params, body);\n    // console.log(\"BODY\", body);\n    let resp = await axios(endpoint, {\n        method: method,\n        params: params,\n        baseURL: baseUrl,\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        data: body,\n    });\n    // console.log(\"RESPONSE\", resp);\n    return resp.data;\n}\n","import * as React from 'react';\nimport './EventCalendar.css';\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport interactionPlugin from '@fullcalendar/interaction'\nimport listMonthPlugin from '@fullcalendar/list';\nimport bootstrapPlugin from \"@fullcalendar/bootstrap\";\nimport EventDataLoader from \"../event-data-loader/EventDataLoader\";\nimport apiConfig from '../apiConfig';\nimport queryString from 'query-string';\nimport { getContact } from \"../ContactProvider\";\nimport {Button} from \"react-bootstrap-buttons\";\nimport {memberEventTag,buildRedirect} from \"../Utils\";\nimport {callApi} from \"../ApiProvider\";\n\nexport default class EventCalendar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fetch: true,\n        }\n    }\n\n    async componentDidMount() {\n        let prev;\n        const queryStringValues = queryString.parse(this.props.location.search);\n        if ( queryStringValues.mid && queryStringValues.mid !== \"0\") {\n            let contact = await getContact(queryStringValues.mid);\n            this.props.onMemberChange(contact);\n            this.setState({isLoggedInUser:true})\n        }\n\n        prev = queryStringValues.prev;\n\n        if (prev === 'Display') {\n            await this.setState({fetch:false});\n        } else {\n            try {\n                this.setState({events: await this.getEvents()})\n            } catch (e) {\n                console.log(\"ERROR*****\", e);\n            }\n        }\n    }\n\n    handleEventClick = (arg) => {\n        this.setState({\n            showEvent: true,\n            eventInfo: {\n                eventId: arg.event.id,\n                parentId: arg.event.extendedProps.parentId,\n            } });\n    }\n\n    handleDateClick = (e) => {\n        // this.setState({editEvent: this.state.isLoggedInUser, eventInfo: e});\n        this.setState({\n            createEvent: this.state.isLoggedInUser,\n            eventInfo: {\n                date: e.date\n            }});\n    }\n\n    createEvent = () => {\n        this.setState({\n            createEvent: this.state.isLoggedInUser,\n            eventInfo: {\n                date: Date.now()\n            }\n        });\n    }\n\n\n    render() {\n        if (this.state.showEvent) {\n            return buildRedirect('/showEvent', this.props.member, this.state.eventInfo);\n        }\n        if (this.state.createEvent) {\n            return buildRedirect('/createEvent', this.props.member, this.state.eventInfo);\n        }\n\n        if (this.state.fetch) {\n            // console.log('showing loader');\n            return (<EventDataLoader name=\"Event Calendar\"/>);\n        } else {\n            return (\n                <div className='demo-app'>\n                    <div className='demo-app-main'>\n                        <FullCalendar\n                            plugins={[dayGridPlugin, interactionPlugin, listMonthPlugin, bootstrapPlugin]}\n                            themeSystem='bootstrap'\n                            headerToolbar={{\n                                left: 'prev today next',\n                                center: 'title',\n                                right: 'dayGridMonth,listMonth'\n                            }}\n                            initialView='dayGridMonth'\n                            displayEventTime={true}\n                            firstDay={1}\n                            fixedWeekCount={false}\n                            height='auto'\n                            editable={true}\n                            selectable={true}\n                            selectMirror={true}\n                            dayMaxEvents={true}\n                            weekends={true}\n                            events={this.props.events}\n                            // initialEvents={INITIAL_EVENTS} // alternatively, use the `events` setting to fetch from a feed\n                            select={this.handleDateSelect}\n                            // eventContent={renderEventContent} // custom render function\n                            eventClick={this.handleEventClick}\n                            eventsSet={this.handleEvents} // called after events are initialized/added/changed/removed\n                            dateClick={this.handleDateClick}\n                            /* you can update a remote database when these fire:\n                            eventAdd={function(){}}\n                            eventChange={function(){}}\n                            eventRemove={function(){}}\n                            */\n                        />\n                        {this.state.isLoggedInUser ? <Button xs onClick={this.createEvent}>Create Event</Button> :\n                            <div></div>}\n                        <div className=\"userName\">\n                            {this.props.member.displayName != null ? this.props.member.displayName : 'Anonymous'}\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n    }\n\n    firstDateEventsToRetrieve = () => {\n        let firstDate = new Date();\n        firstDate.setFullYear(firstDate.getFullYear() - 1);\n        firstDate.setMonth(firstDate.getMonth() - 6);\n\n        return firstDate.toISOString()\n    }\n\n    handleEvents = (events) => {\n        this.setState({\n            currentEvents: events\n        })\n    }\n\n    getEvents = async () => {\n        const resp = await callApi(apiConfig.eventsUrl, 'get', '/', {StartDate: this.firstDateEventsToRetrieve()}, undefined);\n        let myEvents = resp.data\n            .filter(evnt => this.shouldShowEvent(evnt))\n            .map(this.convertEventType);\n        this.props.onEventChange(myEvents);\n        this.setState({fetch:false});\n    }\n\n    shouldShowEvent = (evnt) => {\n        if( !this.props.member.isAdmin && evnt.AccessLevel==='AdminOnly' ) {\n            return false;\n        }\n        return true;\n    }\n\n    convertEventType = (orig) => {\n        let p = {\n            id: orig.Id.toString(),\n            title: orig.Name,\n            start: orig.StartDate,\n            end: orig.EndDate,\n            parentId: orig.parentId,\n            backgroundColor: this.getEventColor(orig),\n        }\n        return p;\n    }\n\n    getEventColor = (event) => {\n        let eventColor;\n        if (/Race/.test(event.Name) || (event.Tags && event.Tags.indexOf('race') > -1)) {\n            eventColor = 'red'\n        } else if (event.Tags && event.Tags.indexOf(memberEventTag()) > -1) {\n            eventColor = 'green'\n        } else if (event.parentId || (event.Tags && event.Tags.indexOf('workouts') > -1)) {\n            eventColor = 'orange'\n        } else {\n            eventColor = 'blue'\n        }\n        // console.log('EVENT TAGS', event.Tags, eventColor );\n        return eventColor;\n    }\n}\n\n","import {callApi} from \"./ApiProvider\";\nimport apiConfig from \"./apiConfig\";\n\nexport const getRegistrationsForEventId = async ( eventId) => {\n    return await callApi(apiConfig.registrationsUrl, 'get', '/event/'+eventId, undefined, undefined );\n}\n\nexport const createInitialRegistrationForEvent = async (eventId, userId) => {\n    let regTypes = await getRegistrationTypesForEvent(eventId);\n    let regTypeId = regTypes.data[0].Id;\n\n    await updateRegistrationTypeForEvent(regTypeId, eventId);\n    return await sendRegistrationForEvent(eventId, userId, regTypeId);\n}\n\nexport const registerUserForEventId = async (eventId, userId, regTypeId) => {\n    return await sendRegistrationForEvent(eventId, userId, regTypeId)\n}\n\nconst sendRegistrationForEvent = async (eventId, userId, regType) => {\n    return await callApi(apiConfig.registrationsUrl, 'post', '/', undefined, createRegistration(eventId, userId, '', 0, regType));\n}\n\nexport const unregisterFromEvent = async (regId, cb) => {\n    await callApi(apiConfig.registrationsUrl, 'delete', '/'+regId, undefined, undefined);\n}\n\nexport const updateRegistration = async (reg, regTypeId) => {\n    let updatedReg = createRegistration(reg.eventId, reg.memberId, reg.message, reg.numGuests);\n    updatedReg.Id = reg.regId;\n    updatedReg.RegistrationDate = reg.dateRegistered;\n    updatedReg.RegistrationTypeId = regTypeId;\n    await callApi(apiConfig.registrationsUrl,'put','/'+reg.regId, undefined, updatedReg);\n    return updatedReg;\n}\n//\nconst getRegistrationTypesForEvent = async (eventId) => {\n    return callApi(apiConfig.registrationsUrl, 'get', '/types/'+eventId, undefined, undefined);\n}\n\nconst updateRegistrationTypeForEvent = async (regTypeId, eventId) => {\n    let regTypeUpdate = createRegistrationTypeUpdateRecord(regTypeId, eventId);\n    let resp = await callApi(apiConfig.registrationsUrl, 'PUT', '/types/'+regTypeId, undefined, regTypeUpdate);\n    return resp;\n}\n\nconst createRegistration = (eventId, userId, msg, numGuests, regType) => {\n    return {\n        \"Event\": {\n            \"Id\": eventId\n        },\n        \"Contact\": {\n            \"Id\" : userId\n        },\n        \"RegistrationTypeId\": regType,\n        \"GuestRegistrationsSummary\": {\n            \"NumberOfGuests\": numGuests,\n            \"NumberOfGuestsCheckedIn\": 0\n        },\n        \"IsCheckedIn\": false,\n        \"ShowToPublic\": true,\n        \"RegistrationDate\": new Date(),\n        \"Memo\": msg,\n        \"RecreateInvoice\": false\n    }\n}\n\nconst createRegistrationTypeUpdateRecord = (regTypeId, eventId) => {\n    return {\n        \"Id\": regTypeId,\n        \"EventId\": eventId,\n        \"IsEnabled\": true,\n        \"Description\": \"\",\n        \"BasePrice\": 0.0000,\n        \"GuestPrice\": 0.0000,\n        \"UseTaxScopeSettings\": null,\n        \"Availability\": \"Everyone\",\n        \"AvailableForMembershipLevels\": null,\n        \"GuestRegistrationPolicy\": \"NumberOfGuests\",\n        \"CurrentRegistrantsCount\": 0,\n        \"MultipleRegistrationAllowed\": false,\n        \"UnavailabilityPolicy\": \"Undefined\",\n        \"CancellationBehaviour\": \"DoNotAllow\",\n        \"CancellationDaysBeforeEvent\": null,\n        \"IsWaitlistEnabled\": false,\n        \"Name\": \"RSVP\"\n    }\n}\n","import {callApi} from \"./ApiProvider\";\nimport apiConfig from \"./apiConfig\";\n\nexport const sendEmail = async (eventId, recipArray, subject, text) => {\n    return callApi(apiConfig.emailUrl,'post', '/', undefined, makeMessage(eventId,recipArray, subject,text));\n}\n\nconst makeMessage = (eventId, recipArray, subject, text) => {\n    return {\n        Subject: subject,\n        Body: text,\n        Recipients: processRecipients(recipArray),\n        EventId: eventId\n    }\n}\n\nconst processRecipients = (recipArray) => {\n    let recipients = recipArray.map((recip) => {\n        return {\n            Id: recip.memberId,\n            Type: \"IndividualContactRecipient\"\n        }\n    });\n    return recipients;\n}\n","import {callApi} from \"./ApiProvider\";\nimport apiConfig from \"./apiConfig\";\n\nexport const getEventById = async (eventId) => {\n    const resp = await callApi(apiConfig.eventsUrl,'get','/'+eventId, undefined, undefined);\n    return resp.data;\n}\n\nexport const udpateEvent = async (eventId, theEvent) => {\n    const resp = await callApi(apiConfig.eventsUrl, 'put', '/'+eventId, undefined, theEvent);\n    return resp.data;\n}\n\nexport const deleteEvent = async (eventId) => {\n    const resp = await callApi(apiConfig.eventsUrl, 'delete', '/'+eventId, undefined, undefined);\n    return resp.data;\n}\n","import React, {Component} from 'react';\nimport {Button} from 'react-bootstrap-buttons';\nimport EventDataLoader from \"../event-data-loader/EventDataLoader\";\nimport {getContact} from \"../ContactProvider\";\nimport {searchForSessionAndAdjustFields, buildRedirect} from \"../Utils\";\nimport {getRegistrationsForEventId, registerUserForEventId, unregisterFromEvent, updateRegistration} from \"../RegistrationsProvider\";\nimport {sendEmail} from \"../EmailProvider\";\nimport Modal from \"react-bootstrap/Modal\";\nimport \"./EventDisplay.css\";\nimport {getEventById} from \"../EventProvider\";\n\nexport default class EventDisplay extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fetch: true,\n            eventId: '',\n            url: '',\n            event: null,\n            organizer: null,\n            modalToggle: false,\n            rsvpMessage: \"\",\n            rsvpModalTitle: \"\",\n            modalTextBoxType: \"\",\n            registrations: [],\n        }\n        this.toggle = this.toggle.bind(this);\n        this.onChangeRsvpMessage = this.onChangeRsvpMessage.bind(this);\n    }\n\n    async componentDidMount() {\n        // recurring event\n        await this.getEvent();\n        let regs = await getRegistrationsForEventId(this.state.event.Id);\n        await this.setState({\n            registrations: regs.data.map(this.convertRegistrationData),\n            fetch: false,\n        });\n\n        if (this.state.event && this.state.event.Details && this.state.event.Details.Organizer) {\n            let contact = await getContact(this.state.event.Details.Organizer.Id);\n            this.setState({organizer: contact});\n        }\n    }\n\n    calendarViewClick() {\n        this.props.history.push(`/?mid=${this.props.location.state.member.id}&prev=Display`);\n    }\n\n    toggle() {\n        this.setState({modalToggle:!this.state.modalToggle});\n    }\n\n    async getEvent() {\n        if (this.props.location.state.eventInfo.parentId && this.state.fetch) {\n            let event = await getEventById(this.props.location.state.eventInfo.parentId);\n            await this.setState({event: searchForSessionAndAdjustFields(event, this.props.location.state.eventInfo.eventId),});\n        } else {\n            let event = await getEventById(this.props.location.state.eventInfo.eventId);\n            await this.setState({event: event});\n        }\n    }\n\n    convertRegistrationData(reg, orig) {\n        return {\n            regId: reg.Id,\n            memberId: reg.Contact.Id,\n            eventId: reg.Event.Id,\n            name: reg.DisplayName,\n            message: reg.Memo,\n            numGuests: reg.GuestRegistrationsSummary && reg.GuestRegistrationsSummary.NumberOfGuests ? reg.GuestRegistrationsSummary.NumberOfGuests : 0,\n            dateRegistered: reg.RegistrationDate\n        }\n    }\n\n    handleEditClick() {\n        this.setState({editEvent: true});\n    }\n\n    canEdit() {\n        return  this.props.location.state.member && this.props.location.state.eventInfo.parentId === undefined && (\n            this.props.location.state.member.isAdmin || this.isUserEventOrganizer()\n        )\n    }\n\n    isUserEventOrganizer() {\n        return this.state.event.Details && this.state.event.Details.Organizer && this.props.location.state.member.id === this.state.event.Details.Organizer.Id;\n    }\n\n    notAlreadyRegistered() {\n        return this.props.location.state.member && this.state.registrations.filter( x => this.props.location.state.member.id === x.memberId).length === 0\n    }\n\n    async handleRegisterClick() {\n        let data = await registerUserForEventId(this.state.event.Id, this.props.location.state.member.id, this.state.event.Details.RegistrationTypes[0].Id);\n        this.setState( state => {\n            const registrations = [this.convertRegistrationData(data.data, null), ...state.registrations];\n            return {\n                registrations\n            }\n        })\n    }\n\n    async handleUnRegisterClick(regId) {\n        await unregisterFromEvent(regId, (data) => {});\n        this.setState( state => {\n            const registrations = state.registrations.filter(reg => reg.regId !== regId);\n            return {\n                registrations\n            }\n        })\n    }\n\n    getRegTypeIdFromEvent() {\n        return this.state.event.Details.RegistrationTypes[0].Id\n    }\n\n    async handleAddGuest(regId) {\n        let reg = this.findRegistrationByRegId(regId);\n        reg.numGuests = reg.numGuests+1;\n        let regTypeId = this.getRegTypeIdFromEvent();\n        let updated = await updateRegistration(reg,regTypeId);\n        updated.DisplayName = this.props.location.state.member.displayName;\n        await this.updateRegistrationInState(reg, updated);\n    }\n\n    async handleAddMessage() {\n        let reg = Object.assign({}, this.state.registration);\n        reg.message = this.state.rsvpMessage;\n\n        let regTypeId = this.getRegTypeIdFromEvent();\n        let updated = await updateRegistration(reg,regTypeId);\n        updated.DisplayName = this.props.location.state.member.displayName;\n        await this.updateRegistrationInState(reg, updated);\n\n        this.setState({registration:null, rsvpMessage:''});\n        this.toggle();\n    }\n\n    async handleMessagingClick() {\n        await this.setState({rsvpModalTitle: \"Message to RSVP Contacts\", modalTextBoxType: \"textarea\"})\n        this.toggle();\n    }\n\n    async handleSendMessage() {\n        await sendEmail(this.state.event.Id, this.state.registrations, this.messageSubject(), this.memberMessage());\n        await this.setState({\n            rsvpModalTitle: '',\n            rsvpMessage: '',\n            modalTextBoxType: \"text\"\n        });\n        this.toggle();\n    }\n    messageSubject() {\n        return \"Event Update: \"+this.state.event.Name+ \"  \"+ new Date(this.state.event.StartDate).toLocaleString();\n    }\n    memberMessage() {\n        return \"<html><body>This is concerning the event you RSVP'd to on: \"+new Date(this.state.event.StartDate).toLocaleString()+\"<h2>\"+this.state.event.Name\n        + \"</h2><p><h3><u>Message from the event organizer</u>:</h3>\"+ this.state.rsvpMessage+\"</body></html>\";\n    }\n\n    async updateRegistrationInState(reg, data) {\n        await this.setState(state => {\n            const registrations = state.registrations.map((item) => {\n                return item.regId === reg.regId ? this.convertRegistrationData(data) : item;\n            });\n\n            return {\n                registrations\n            };\n        });\n    }\n\n    async addMessageModal(regId) {\n        let reg = this.findRegistrationByRegId(regId);\n        await this.setState({registration: reg, rsvpMessage: reg.message, rsvpModalTitle: \"RSVP Message\", modalTextBoxType: \"text\"});\n        this.toggle();\n    }\n\n    onChangeRsvpMessage(x) {\n        this.setState({rsvpMessage: x.target.value});\n    }\n\n    findRegistrationByRegId(regId) {\n        let regArray = this.state.registrations.filter(reg => reg.regId === regId);\n        if (regArray.length === 1) {\n            // console.log(\"find reg returning -> \", regArray[0]);\n            return regArray[0];\n        } else {\n            // console.log(\"find reg by reg id -- returning null\");\n            return null;\n        }\n    }\n    canRegisterForEvent() {\n        let fee = 0.0;\n        let guestFee = 0.0;\n\n        if (!this.state.event.RegistrationEnabled) {\n            return false;\n        }\n\n        this.state.event.Details.RegistrationTypes.map(reg => {\n            fee += reg.BasePrice;\n            guestFee += reg.GuestPrice;\n            return null;\n        })\n\n        if (this.state.event.Details.TotalDue === 0 && this.state.event.Details.TotalPaid === 0 && this.props.location.state.member.id !== 0\n            && fee === 0.0 && guestFee === 0.0 && !this.state.event.Sessions) {\n            return true;\n        }\n        return false;\n    }\n\n    renderRegistrationData() {\n        return this.state.registrations.map( (reg, index) => {\n            const { regId, name, message, numGuests } = reg;\n            return <tr key={regId}>\n                <td>{name}</td>\n                <td>{numGuests}</td>\n                <td>{message}</td>\n            </tr>\n        })\n    }\n\n    render() {\n        let regData = this.state.registrations ? this.state.registrations.filter(reg => reg.memberId === this.props.location.state.member.id):[];\n\n        if (this.state.fetch) {\n            return (<EventDataLoader name={this.props.location.state.name}/>);\n        } else if (this.state.editEvent) {\n            return buildRedirect('/editEvent', this.props.location.state.member, this.props.location.state.eventInfo);\n        } else {\n            return (\n                <div>\n                    <Button xs onClick={() => this.calendarViewClick()}>Calendar View</Button>\n                    {this.canEdit() && <Button xs btnStyle=\"primary\" onClick={() => this.handleEditClick()}>Edit Event</Button>}\n                    {this.canEdit() && <Button xs btnStyle=\"warning\" onClick={() => this.handleMessagingClick()}>Message RSVPd Members</Button>}\n                    {this.notAlreadyRegistered() && this.canRegisterForEvent() && <Button xs btnStyle=\"success\" onClick={() => this.handleRegisterClick()}>RSVP</Button>}\n                    {regData.length===1 && !this.isUserEventOrganizer() && <Button xs btnStyle=\"danger\" onClick={() => this.handleUnRegisterClick(regData[0].regId) }>Unregister</Button> }\n                    {regData.length===1 && <Button xs btnStyle=\"secondary\" onClick={() => this.handleAddGuest(regData[0].regId)}>Add Guest</Button> }\n                    {regData.length===1 && <Button xs btnStyle=\"secondary\" onClick={() => this.addMessageModal(regData[0].regId)}>Add/Edit Comment</Button> }\n\n                    <h2>{this.state.event.Name}</h2>\n                    <div className=\"event_id\">\n                        <label>Event Id: </label>&nbsp;&nbsp;\n                        {this.state.event.Id}\n                    </div>\n                    <div className=\"event-title\">\n                        <label>Event Name: </label>&nbsp;&nbsp;\n                        {this.state.event.Name}\n                    </div>\n                    <div className=\"event-start\">\n                        <label>Event Start Date/Time:</label>&nbsp;&nbsp;\n                        {new Date(this.state.event.StartDate).toLocaleString()}\n                    </div>\n                    <div className=\"event-end\">\n                        <label>Event End Date/Time:</label>&nbsp;&nbsp;\n                        {new Date(this.state.event.EndDate).toLocaleString()}\n                    </div>\n                    <div className=\"location\">\n                        <label>Event Location: </label>&nbsp;&nbsp;\n                        {this.state.event.Location}\n                    </div>\n\n                    {this.state.organizer && <div className=\"organizer\">\n                        <label>Organizer: </label>&nbsp;&nbsp;\n                        {this.state.organizer.displayName + '(' + this.state.organizer.email + ')'}\n                    </div>}\n\n                    <div className=\"descriptionHtml\">\n                        <label>Description: </label><br/>&nbsp;&nbsp;\n                        <div dangerouslySetInnerHTML={{__html: this.state.event.Details.DescriptionHtml}} />\n                    </div>\n\n                    { this.state.event.RegistrationEnabled && <div className=\"registrations\">\n                        <label>Registrations: </label><br/>\n                        <table id='registrations' className=\"table-striped\">\n                            <tbody>\n                                <tr>\n                                    {/*<th scope=\"col\">Registration Id</th>*/}\n                                    <th scope=\"col\">Name</th>\n                                    <th scope=\"col\">#Guests</th>\n                                    {/*<th scope=\"col\">Date Registered</th>*/}\n                                    <th scope=\"col\">Comments</th>\n                                </tr>\n                                {this.renderRegistrationData()}\n                            </tbody>\n                        </table>\n                    </div> }\n\n                    <Modal\n                        show={this.state.modalToggle}\n                        onHide={this.toggle}\n                        size=\"lg\"\n                        backdrop=\"static\"\n                        aria-labelledby=\"contained-modal-title-vcenter\"\n                        centered\n                    >\n                        <Modal.Header closeButton>\n                            <Modal.Title id=\"contained-modal-title-vcenter\">\n                                {this.state.rsvpModalTitle}\n                            </Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            <h4>Please enter your message:</h4>\n                            <p>\n                                {this.state.modalTextBoxType==='textarea' ? <textarea\n                                        value={this.state.rsvpMessage}\n                                        className=\"form-control\"\n                                        onChange={this.onChangeRsvpMessage}\n                                    />\n                                    :\n                                    <input type=\"text\"\n                                       value={this.state.rsvpMessage}\n                                       className=\"form-control\"\n                                       onChange={this.onChangeRsvpMessage}\n                                       />\n                                    }\n                            </p>\n                        </Modal.Body>\n                        <Modal.Footer>\n                            <Button xs btnStyle=\"danger\" onClick={this.toggle}>Cancel</Button>\n                            {this.state.modalTextBoxType === 'textarea' ?\n                                <Button xs onClick={() => this.handleSendMessage()}>Send Message</Button>\n                                :\n                                <Button xs onClick={() => this.handleAddMessage()}>Save</Button>\n                            }\n                        </Modal.Footer>\n                    </Modal>\n                    <div className=\"userName\">\n                        {this.props.location.state.member.displayName != null ? this.props.location.state.member.displayName : 'Anonymous'}\n                    </div>\n                </div>\n            );\n        }\n    }\n}\n","import React, {Component} from 'react';\nimport DatePicker from 'react-datepicker';\nimport {registerLocale, setDefaultLocale} from \"react-datepicker\";\nimport \"./DateTimeRange.css\";\nimport enGB from \"date-fns/locale/en-GB\";\n\nregisterLocale(\"en-GB\", enGB);\n\nsetDefaultLocale(\"en-GB\")\n\nexport default class DateTimeRange extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            startDate: this.props.startDate != null ? new Date(this.props.startDate) : null,\n            endDate: this.props.endDate != null ? new Date(this.props.endDate) : null,\n            maxDate: this.props.endDate ? new Date(new Date(this.props.endDate).setHours(23, 59, 59)) : null,\n            minDate: this.props.startDate ? new Date(new Date(this.props.startDate).setHours(0, 0, 0)) : null,\n        }\n        this.onChangeStartDate = this.onChangeStartDate.bind(this);\n        this.onChangeStartTime = this.onChangeStartTime.bind(this);\n        this.onChangeEndTime = this.onChangeEndTime.bind(this);\n    }\n\n    async onChangeStartDate(date) {\n        let newDate = new Date(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes());\n        if (this.props.endDate === null) {\n            let myEndDate = new Date(newDate.getTime());\n            await this.setState({endDate: new Date(myEndDate.setHours(23, 59, 59, 0))});\n        }\n        await this.setState({\n            startDate: newDate,\n            endDate: new Date(this.state.endDate.setFullYear(date.getFullYear(), date.getMonth(), date.getDate())),\n            minDate: new Date(date.setHours(0, 0, 0, 0)),\n            maxDate: new Date(date.setHours(23, 59, 59, 0)),\n        });\n        this.props.onChangeStartDate(this.state.startDate);\n        this.props.onChangeEndDate(this.state.endDate);\n    }\n\n    async onChangeStartTime(date) {\n        if (this.state.endDate < this.state.startDate) {\n            await this.setState({\n                startDate: date,\n                endDate: date\n            })\n        } else {\n            await this.setState({startDate: date});\n        }\n        this.props.onChangeStartDate(this.state.startDate);\n        this.props.onChangeEndDate(this.state.endDate);\n    }\n\n    onChangeEndTime(date) {\n        this.setState({endDate: date})\n        this.props.onChangeEndDate(date);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.state.startDate !== prevState.startDate || this.state.endDate !== prevState.endDate) {\n            this.render();\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"dateTimeRangeSelector\">\n                <div className=\"dateTimeRangeSelector-date\">\n                    <label>{this.props.dateLabel}</label>\n                    <DatePicker\n                        selected={this.props.startDate}\n                        placeholderText=\"Click to select a date\"\n                        onChange={date => this.onChangeStartDate(date)}\n                    />\n                </div>\n                {this.props.startDate != null ?\n                        <div className=\"dateTimeRangeSelector-start\">\n                            <label>{this.props.startLabel}</label>\n                            <DatePicker\n                                selected={this.props.startDate}\n                                onChange={date => this.onChangeStartTime(date)}\n                                showTimeSelect\n                                showTimeSelectOnly\n                                timeIntervals={15}\n                                minTime={this.state.minDate}\n                                maxTime={this.state.endDate}\n                                timeCaption=\"Start Time\"\n                                dateFormat=\"h:mm aa\"\n                            />\n                        </div> : <div /> }\n                {this.props.startDate != null ?\n                        <div className=\"dateTimeRangeSelector-end\">\n                            <label>{this.props.endLabel}</label>\n                            <DatePicker\n                                selected={this.props.endDate}\n                                onChange={date => this.onChangeEndTime(date)}\n                                showTimeSelect\n                                showTimeSelectOnly\n                                timeIntervals={15}\n                                minTime={this.state.startDate}\n                                maxTime={this.state.maxDate}\n                                timeCaption=\"End Time\"\n                                dateFormat=\"h:mm aa\"\n                            />\n\n                        </div>\n                    : <div/>}\n            </div>\n        )\n    }\n}\n","import React, {Component} from 'react';\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport EventDataLoader from \"../event-data-loader/EventDataLoader\";\nimport {emptyEvent} from '../Utils';\nimport \"./EventCreator.css\";\nimport DateTimeRange from \"../date-time-range/DateTimeRange\";\nimport {Button} from \"react-bootstrap-buttons\";\nimport {callApi} from \"../ApiProvider\";\nimport apiConfig from \"../apiConfig\";\nimport {createInitialRegistrationForEvent} from \"../RegistrationsProvider\";\n\nexport default class EventCreator extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            event: emptyEvent(),\n            isEditing: true,\n            eventInfo: props.location.state.eventInfo,\n            fetch: true\n        }\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onChangeEventLocation = this.onChangeEventLocation.bind(this);\n        this.onChangeEventName = this.onChangeEventName.bind(this);\n        this.startDateHandler = this.startDateHandler.bind(this);\n        this.endDateHandler = this.endDateHandler.bind(this);\n    }\n\n    async onSubmit(e) {\n        e.preventDefault();\n\n        let theEvent = Object.assign({}, this.state.event);\n        theEvent.StartDate = theEvent.StartDate.toISOString();\n        theEvent.EndDate = theEvent.EndDate.toISOString();\n        let response = await callApi(apiConfig.eventsUrl,'post','/',undefined, theEvent);\n\n        await createInitialRegistrationForEvent(response.data, this.props.location.state.member.id);\n\n        this.setState({event: emptyEvent()});\n\n        this.props.history.push(`/?mid=${this.props.location.state.member.id}`);\n    }\n\n    onChangeEventName(e) {\n        this.setState({event: {...this.state.event, Name: e.target.value }})\n    }\n\n    onChangeEventLocation(e) {\n        this.setState({event:{...this.state.event, Location: e.target.value}})\n    }\n\n    async componentDidMount() {\n        let startDate = null;\n        let endDate = null;\n\n        await this.setState({\n            eventInfo: this.props.location.state.eventInfo\n        })\n        if (this.state.eventInfo.date) {  // user clicked on a date to create event.\n            startDate = new  Date(new Date(this.state.eventInfo.date).setHours(8,0,0));\n            endDate = new  Date(new Date(this.state.eventInfo.date).setHours(20,0,0));\n        }\n\n        await this.setState({event: {...this.state.event, StartDate: startDate}});\n        await this.setState({event: {...this.state.event, EndDate: endDate}});\n        await this.setState({fetch:false});\n\n        let details = Object.assign({}, this.state.event.Details)\n         details.Organizer = {\n            Id: this.props.location.state.member.id\n        }\n        this.setState({event: {...this.state.event, Details:details}});\n    }\n\n    startDateHandler(date) {\n        this.setState({event: {...this.state.event, StartDate: date}});\n    }\n\n    endDateHandler(date) {\n        this.setState({event: {...this.state.event, EndDate: date}});\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.state.event.StartDate !== prevState.event.StartDate || this.state.event.EndDate !== prevState.event.EndDate) {\n            this.render()\n        }\n    }\n\n    calendarViewClick() {\n        this.props.history.push(`/?mid=${this.props.location.state.member.id}`);\n    }\n\n    render() {\n        if (this.state.fetch) {\n            return <EventDataLoader name={this.props.location.state.name}/>;\n        } else {\n            return (\n                <div className=\"App\">\n                     <div className=\"editor\">\n                         <form onSubmit={this.onSubmit}>\n                             <div className=\"form-group\" style={{'text-align':'center'}}>\n                                 <Button xs onClick={() => this.calendarViewClick()}>Calendar View</Button>\n                             </div>\n                            <div className=\"form-group\">\n                                <label>Event Name: </label>\n                                <input type=\"text\"\n                                        className=\"form-control\"\n                                        value={this.state.event.Name}\n                                        onChange={this.onChangeEventName}/>\n                            </div>\n                            <div className=\"form-group\">\n                                <DateTimeRange dateLabel=\"Event Date: \"\n                                               startLabel=\"Start Time: \"\n                                               endLabel=\"End Time: \"\n                                               startDate={this.state.event.StartDate}\n                                               endDate={this.state.event.EndDate}\n                                               onChangeStartDate={this.startDateHandler}\n                                               onChangeEndDate={this.endDateHandler}/>\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Event Location: </label>\n                                <input type=\"text\"\n                                        className=\"form-control\"\n                                        value={this.state.event.Location}\n                                        onChange={this.onChangeEventLocation}/>\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label>Description</label>\n                                <CKEditor\n                                    editor={ ClassicEditor }\n                                    data={this.state.event.Details.DescriptionHtml}\n                                    onChange={ ( event, editor ) => {\n                                        let details = this.state.event.Details;\n                                        details.DescriptionHtml = editor.getData();\n                                        this.setState({event: {...this.state.event, Details: details}});\n                                    } }\n                                />\n                            </div>\n\n                            <div className=\"form-group\" style={{'text-align':'center'}}>\n                                <Button xs btnStyle=\"primary\" type=\"submit\">Create Event</Button>\n                            </div>\n\n                        </form>\n                    </div>\n                    <div className=\"userName\">\n                        {this.props.location.state.member.displayName != null ? this.props.location.state.member.displayName : 'Anonymous'}\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\n","import React, {Component} from 'react';\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\n// import {getEventById, updateEvent, deleteEvent} from \"../../utils/WildApricotEvents\";\nimport {deleteEvent, getEventById, udpateEvent} from \"../EventProvider\";\nimport {getContact} from \"../ContactProvider\";\nimport EventDataLoader from \"../event-data-loader/EventDataLoader\";\nimport {emptyEvent, searchForSessionAndAdjustFields} from \"../Utils\";\nimport DateTimeRange from \"../date-time-range/DateTimeRange\";\nimport {Button} from \"react-bootstrap-buttons\";\n\nimport \"./EventEditor.css\";\n\nconst editorConfiguration = {\n    link: {\n        link: {\n            decorators: {\n                addTargetToExternalLinks: {\n                    mode: 'automatic',\n                    callback: url => /^(https?:)?\\/\\//.test( url ),\n                    attributes: {\n                        target: '_blank',\n                        rel: 'noopener noreferrer'\n                    }\n                }\n            }\n        }\n    }\n};\n\nexport default class EventEditor extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            event: emptyEvent(),\n            isEditing: true,\n            eventInfo: props.location.state.eventInfo,\n            member: props.location.state.member,\n            fetch: true\n        }\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onChangeEventLocation = this.onChangeEventLocation.bind(this);\n        this.onChangeEventName = this.onChangeEventName.bind(this);\n        this.startDateHandler = this.startDateHandler.bind(this);\n        this.endDateHandler = this.endDateHandler.bind(this);\n        this.handleDelete = this.handleDelete.bind(this);\n    }\n\n    async onSubmit(e) {\n        e.preventDefault();\n\n        // let theEvent = Object.assign({}, this.state.event);\n        await udpateEvent(this.state.event.Id, this.state.event);\n        this.setState({event: emptyEvent()});\n        this.props.history.push(`/?mid=${this.state.member.id}`);\n    }\n\n    onChangeEventName(e) {\n        this.setState({event: {...this.state.event, Name: e.target.value }})\n    }\n\n    onChangeEventLocation(e) {\n        this.setState({event:{...this.state.event, Location: e.target.value}})\n    }\n\n    async getEvent() {\n        if (this.props.location.state.eventInfo.parentId && this.state.fetch) {\n            let event = await getEventById(this.props.location.state.eventInfo.parentId);\n            await this.setState({event: searchForSessionAndAdjustFields(event, this.props.location.state.eventInfo.eventId),});\n        } else {\n            let event = await getEventById(this.props.location.state.eventInfo.eventId);\n            await this.setState({event: event});\n        }\n    }\n\n    async componentDidMount() {\n        // await getAuthTokens((data) => this.setState({waToken: data}));\n        this.setState({\n            member: this.props.location.state.member,\n            eventInfo: this.props.location.state.eventInfo\n        })\n\n        await this.getEvent();\n        this.setState({event:{...this.state.event,StartDate: new Date(this.state.event.StartDate)}});\n        this.setState({event:{...this.state.event,EndDate: new Date(this.state.event.EndDate)}});\n        this.setState({fetch:false});\n\n        if (this.props.location.state.eventInfo.date) {\n            let maxTime = new Date(this.props.location.state.eventInfo.date.getTime());\n            this.setState({...this.state.event, startDate: this.props.location.state.eventInfo.date});\n            this.setState({...this.state.event, endDate: new Date(maxTime.setHours(23,59,59))});\n        }\n\n        if (this.state.event && this.state.event.Details && this.state.event.Details.Organizer) {\n            await getContact(this.state.event.Details.Organizer.Id, (data) => {\n                this.setState({organizer: data});\n            });\n            // console.log(\"contact\", this.state.organizer);\n        }\n    }\n\n    startDateHandler(date) {\n        this.setState({event: {...this.state.event, StartDate: date}});\n    }\n\n    endDateHandler(date) {\n        this.setState({event: {...this.state.event, EndDate: date}});\n    }\n\n    async handleDelete() {\n        await deleteEvent(this.state.event.Id);\n        this.props.history.push(`/?mid=${this.state.member.id}`);\n    }\n\n    calendarViewClick() {\n        this.props.history.push(`/?mid=${this.props.location.state.member.id}&prev=Display`);\n    }\n\n    handleStartChange = async (dt) => {\n        await this.setState({date: {...this.state.date, date: dt}});\n    }\n\n    render() {\n        if (this.state.fetch) {\n            return <EventDataLoader name={this.props.location.state.name}/>;\n        } else {\n            return (\n                <div className=\"App\">\n                     <div className=\"editor\">\n                         <div className=\"form-group\" style={{'textAlign':'center'}}>\n                             <Button xs onClick={() => this.calendarViewClick()}>Calendar View</Button>\n                             <Button xs btnStyle=\"danger\" onClick={() => this.handleDelete()}>Delete Event</Button>\n                         </div>\n                        <form onSubmit={this.onSubmit}>\n                            <div className=\"form-group\">\n                                <label>Event Id: </label>\n                                {this.state.event.Id}\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Event Name: </label>\n                                <input type=\"text\"\n                                        className=\"form-control\"\n                                        value={this.state.event.Name}\n                                        onChange={this.onChangeEventName}/>\n                            </div>\n                            <div className=\"form-group\">\n                                <DateTimeRange dateLabel=\"Event Date: \"\n                                               startLabel=\"Start Time: \"\n                                               endLabel=\"End Time: \"\n                                               startDate={this.state.event.StartDate}\n                                               endDate={this.state.event.EndDate}\n                                               onChangeStartDate={this.startDateHandler}\n                                               onChangeEndDate={this.endDateHandler}/>\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Event Location: </label>\n                                <input type=\"text\"\n                                        className=\"form-control\"\n                                        value={this.state.event.Location}\n                                        onChange={this.onChangeEventLocation}/>\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label>Description</label>\n                                <CKEditor\n                                    config={editorConfiguration}\n                                    editor={ ClassicEditor }\n                                    data={this.state.event.Details.DescriptionHtml}\n                                    onChange={ ( event, editor ) => {\n                                            let details = this.state.event.Details;\n                                            details.DescriptionHtml = editor.getData();\n                                            this.setState({event: {...this.state.event, Details: details}});\n                                        }\n                                    }\n                                />\n                            </div>\n\n                            <div className=\"form-group button\" style={{'textAlign':'center'}}>\n                                <Button xs btnStyle=\"primary\" type=\"submit\">Save Event</Button>\n                            </div>\n\n                        </form>\n                    </div>\n                    <div className=\"userName\">\n                        {this.props.location.state.member.displayName != null ? this.props.location.state.member.displayName : 'Anonymous'}\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\n","import React, {Component} from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport NotFound from \"./containers/NotFound\";\nimport EventCalendar from \"./components/event-calendar/EventCalendar\";\nimport EventDisplay from \"./components/event-display/EventDisplay\";\nimport EventCreator from \"./components/event-create/EventCreator\";\nimport EventEditor from \"./components/event-edit/EventEditor\";\n\nexport default class Routes extends Component {\n    constructor(props) {\n        super(props);\n        localStorage.clear();\n        this.state = {\n            member: {id: 0, isAdmin: false},\n            events: []\n        }\n        console.log(\"IN ROUTES\")\n    }\n\n    handleEventsChange = (events) => {\n        this.setState({events: events})\n    }\n\n    updateMember = (member) => {\n        if (member != null) {\n            this.setState({member: member});\n        }\n    }\n    //\n    // updateToken = (token) => {\n    //     // console.log(\"Updating Token -> \", token)\n    //     this.setState( {token: {timestamp: Date.now(), waToken: token}})\n    // }\n\n    render() {\n        return (\n            <Switch>\n                <Route exact path=\"/\" render={props => <EventCalendar  {...props}\n                                                                       onEventChange={this.handleEventsChange}\n                                                                       events={this.state.events}\n                                                                       onMemberChange={this.updateMember}\n                                                                       member={this.state.member}\n                />}/>\n                <Route exact path=\"/showEvent\" component={EventDisplay}/>\n                <Route exact path=\"/createEvent\" component={EventCreator} />\n                <Route exact path=\"/editEvent\" component={EventEditor} />\n                <Route>\n                    <NotFound />\n                </Route>\n            </Switch>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport './App.css';\nimport Routes from \"./Routes\";\n\nexport default class App extends Component {\n    render() {\n        // console.log('PROPS', this.props);\n        return (\n            <div className=\"App container py-3\">\n                <Routes/>\n            </div>\n        );\n    }\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Router>\n            <App />\n        </Router>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}